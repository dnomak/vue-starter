@mixin wrap($prop: null, $val: null) {
  @if $prop == null {
    display: block;
    width: 100%;
    font-size: 0;
    letter-spacing: 0;
    text-align: left;
    box-sizing: border-box;
    > * {
      display: inline-block;
      vertical-align: top;
    }
  } @else if $prop == 'table' {
    display: table;
    table-layout: fixed;
    flex-direction: initial;
    flex-wrap: initial;
    justify-content: initial;
    align-content: initial;
    align-items: initial;
    column-count: auto;
    > * {
      display: table-cell;
    }
  } @else if $prop == 'flexbox' {
    display: flex;
    table-layout: auto;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-content: center;
    align-items: center;
    column-count: auto;
    > * {
      display: inline-block;
    }
  } @else if $prop == 'normal' {
    display: block;
    table-layout: auto;
    flex-direction: initial;
    flex-wrap: initial;
    justify-content: initial;
    align-content: initial;
    align-items: initial;
    column-count: auto;
    > * {
      display: inline-block;
    }
  } @else if $prop == 'left' {
    justify-content: flex-start;
    text-align: left;
  } @else if $prop == 'center' {
    justify-content: center;
    text-align: center;
  } @else if $prop == 'right' {
    justify-content: flex-end;
    text-align: right;
  } @else if $prop == 'top' {
    align-items: flex-start;
    > * {
      vertical-align: top;
    }
  } @else if $prop == 'middle' {
    align-items: center;
    > * {
      vertical-align: middle;
    }
  } @else if $prop == 'bottom' {
    align-items: flex-end;
    > * {
      vertical-align: bottom;
    }
  } @else if $prop == 'between' {
    justify-content: space-between;
    align-content: space-between;
  } @else if $prop == 'around' {
    justify-content: space-around;
    align-content: space-around;
  } @else if $prop == 'baseline' {
    align-items: baseline;
  } @else if $prop == 'reverse' {
    flex-direction: row-reverse;
    flex-wrap: wrap-reverse;
  } @else if $prop == 'not-reverse' {
    flex-direction: row;
    flex-wrap: wrap;
  } @else if $prop == 'gutter' {
    width: calc(100% + #{$val}#{'rem'});
    margin-left: -#{calc($val / 2)}#{'rem'};
    margin-right: -#{calc($val / 2)}#{'rem'};
    padding-left: 0;
    padding-right: 0;
    > * {
      padding-left: #{calc($val / 2)}#{'rem'};
      padding-right: #{calc($val / 2)}#{'rem'};
    }
  } @else if $prop == 'outside' {
    width: 100%;
    margin-left: 0;
    margin-right: 0;
    padding-left: #{calc($val / 2)}#{'rem'};
    padding-right: #{calc($val / 2)}#{'rem'};
  } @else if $prop == 'masonry' {
    column-count: $val;
  } @else {
    > * {
      @if $prop == 'auto' {
        width: auto;
      } @else {
        width: #{calc(100% / $prop)};
      }
    }
  }
}

@mixin col($prop: null, $val: null) {
  @if $prop == null {
    min-height: 1rem;
    font-size: initial;
    box-sizing: border-box;
  } @else if $prop == 'width' {
    width: #{$val}#{'rem'};
  } @else if $prop == 'hidden' {
    display: none;
  } @else if $prop == 'not-hidden' {
    display: inline-block;
  } @else if $prop == 'first' {
    order: -1;
  } @else if $prop == 'not-first' {
    order: 0;
  } @else if $prop == 'last' {
    order: 1;
  } @else if $prop == 'not-last' {
    order: 0;
  } @else {
    width: #{calc(100% / $val * $prop)};
  }
}
